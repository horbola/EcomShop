/*
 * This file is generated by jOOQ.
 */
package com.saif.web.practice.shop.jooq.tables.records;


import com.saif.web.practice.shop.jooq.tables.Suppliers;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SuppliersRecord extends UpdatableRecordImpl<SuppliersRecord> implements Record8<String, String, String, String, String, String, String, String> {

    private static final long serialVersionUID = -1249315888;

    /**
     * Setter for <code>Suppliers.supplierID</code>.
     */
    public void setSupplierid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>Suppliers.supplierID</code>.
     */
    public String getSupplierid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>Suppliers.shortName</code>.
     */
    public void setShortname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>Suppliers.shortName</code>.
     */
    public String getShortname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>Suppliers.fullName</code>.
     */
    public void setFullname(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>Suppliers.fullName</code>.
     */
    public String getFullname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>Suppliers.house</code>.
     */
    public void setHouse(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>Suppliers.house</code>.
     */
    public String getHouse() {
        return (String) get(3);
    }

    /**
     * Setter for <code>Suppliers.road</code>.
     */
    public void setRoad(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>Suppliers.road</code>.
     */
    public String getRoad() {
        return (String) get(4);
    }

    /**
     * Setter for <code>Suppliers.area</code>.
     */
    public void setArea(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>Suppliers.area</code>.
     */
    public String getArea() {
        return (String) get(5);
    }

    /**
     * Setter for <code>Suppliers.thana</code>.
     */
    public void setThana(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>Suppliers.thana</code>.
     */
    public String getThana() {
        return (String) get(6);
    }

    /**
     * Setter for <code>Suppliers.district</code>.
     */
    public void setDistrict(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>Suppliers.district</code>.
     */
    public String getDistrict() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<String, String, String, String, String, String, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<String, String, String, String, String, String, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Suppliers.SUPPLIERS.SUPPLIERID;
    }

    @Override
    public Field<String> field2() {
        return Suppliers.SUPPLIERS.SHORTNAME;
    }

    @Override
    public Field<String> field3() {
        return Suppliers.SUPPLIERS.FULLNAME;
    }

    @Override
    public Field<String> field4() {
        return Suppliers.SUPPLIERS.HOUSE;
    }

    @Override
    public Field<String> field5() {
        return Suppliers.SUPPLIERS.ROAD;
    }

    @Override
    public Field<String> field6() {
        return Suppliers.SUPPLIERS.AREA;
    }

    @Override
    public Field<String> field7() {
        return Suppliers.SUPPLIERS.THANA;
    }

    @Override
    public Field<String> field8() {
        return Suppliers.SUPPLIERS.DISTRICT;
    }

    @Override
    public String component1() {
        return getSupplierid();
    }

    @Override
    public String component2() {
        return getShortname();
    }

    @Override
    public String component3() {
        return getFullname();
    }

    @Override
    public String component4() {
        return getHouse();
    }

    @Override
    public String component5() {
        return getRoad();
    }

    @Override
    public String component6() {
        return getArea();
    }

    @Override
    public String component7() {
        return getThana();
    }

    @Override
    public String component8() {
        return getDistrict();
    }

    @Override
    public String value1() {
        return getSupplierid();
    }

    @Override
    public String value2() {
        return getShortname();
    }

    @Override
    public String value3() {
        return getFullname();
    }

    @Override
    public String value4() {
        return getHouse();
    }

    @Override
    public String value5() {
        return getRoad();
    }

    @Override
    public String value6() {
        return getArea();
    }

    @Override
    public String value7() {
        return getThana();
    }

    @Override
    public String value8() {
        return getDistrict();
    }

    @Override
    public SuppliersRecord value1(String value) {
        setSupplierid(value);
        return this;
    }

    @Override
    public SuppliersRecord value2(String value) {
        setShortname(value);
        return this;
    }

    @Override
    public SuppliersRecord value3(String value) {
        setFullname(value);
        return this;
    }

    @Override
    public SuppliersRecord value4(String value) {
        setHouse(value);
        return this;
    }

    @Override
    public SuppliersRecord value5(String value) {
        setRoad(value);
        return this;
    }

    @Override
    public SuppliersRecord value6(String value) {
        setArea(value);
        return this;
    }

    @Override
    public SuppliersRecord value7(String value) {
        setThana(value);
        return this;
    }

    @Override
    public SuppliersRecord value8(String value) {
        setDistrict(value);
        return this;
    }

    @Override
    public SuppliersRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SuppliersRecord
     */
    public SuppliersRecord() {
        super(Suppliers.SUPPLIERS);
    }

    /**
     * Create a detached, initialised SuppliersRecord
     */
    public SuppliersRecord(String supplierid, String shortname, String fullname, String house, String road, String area, String thana, String district) {
        super(Suppliers.SUPPLIERS);

        set(0, supplierid);
        set(1, shortname);
        set(2, fullname);
        set(3, house);
        set(4, road);
        set(5, area);
        set(6, thana);
        set(7, district);
    }
}
