/*
 * This file is generated by jOOQ.
 */
package com.saif.web.practice.shop.jooq.tables.records;


import com.saif.web.practice.shop.jooq.tables.Customers;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomersRecord extends UpdatableRecordImpl<CustomersRecord> implements Record3<String, String, String> {

    private static final long serialVersionUID = 2144267472;

    /**
     * Setter for <code>Customers.customerID</code>.
     */
    public void setCustomerid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>Customers.customerID</code>.
     */
    public String getCustomerid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>Customers.password</code>.
     */
    public void setPassword(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>Customers.password</code>.
     */
    public String getPassword() {
        return (String) get(1);
    }

    /**
     * Setter for <code>Customers.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>Customers.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Customers.CUSTOMERS.CUSTOMERID;
    }

    @Override
    public Field<String> field2() {
        return Customers.CUSTOMERS.PASSWORD;
    }

    @Override
    public Field<String> field3() {
        return Customers.CUSTOMERS.NAME;
    }

    @Override
    public String component1() {
        return getCustomerid();
    }

    @Override
    public String component2() {
        return getPassword();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String value1() {
        return getCustomerid();
    }

    @Override
    public String value2() {
        return getPassword();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public CustomersRecord value1(String value) {
        setCustomerid(value);
        return this;
    }

    @Override
    public CustomersRecord value2(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public CustomersRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public CustomersRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CustomersRecord
     */
    public CustomersRecord() {
        super(Customers.CUSTOMERS);
    }

    /**
     * Create a detached, initialised CustomersRecord
     */
    public CustomersRecord(String customerid, String password, String name) {
        super(Customers.CUSTOMERS);

        set(0, customerid);
        set(1, password);
        set(2, name);
    }
}
