/*
 * This file is generated by jOOQ.
 */
package com.saif.web.practice.shop.jooq.tables.records;


import com.saif.web.practice.shop.jooq.tables.Payments;

import java.math.BigDecimal;
import java.sql.Date;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaymentsRecord extends UpdatableRecordImpl<PaymentsRecord> implements Record6<Integer, Integer, Integer, BigDecimal, String, Date> {

    private static final long serialVersionUID = 147347926;

    /**
     * Setter for <code>Payments.paymentID</code>.
     */
    public void setPaymentid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>Payments.paymentID</code>.
     */
    public Integer getPaymentid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>Payments.orderID</code>.
     */
    public void setOrderid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>Payments.orderID</code>.
     */
    public Integer getOrderid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>Payments.paymentMethod</code>.
     */
    public void setPaymentmethod(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>Payments.paymentMethod</code>.
     */
    public Integer getPaymentmethod() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>Payments.amount</code>.
     */
    public void setAmount(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>Payments.amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>Payments.transactionID</code>.
     */
    public void setTransactionid(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>Payments.transactionID</code>.
     */
    public String getTransactionid() {
        return (String) get(4);
    }

    /**
     * Setter for <code>Payments.date</code>.
     */
    public void setDate(Date value) {
        set(5, value);
    }

    /**
     * Getter for <code>Payments.date</code>.
     */
    public Date getDate() {
        return (Date) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Integer, Integer, BigDecimal, String, Date> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, Integer, Integer, BigDecimal, String, Date> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Payments.PAYMENTS.PAYMENTID;
    }

    @Override
    public Field<Integer> field2() {
        return Payments.PAYMENTS.ORDERID;
    }

    @Override
    public Field<Integer> field3() {
        return Payments.PAYMENTS.PAYMENTMETHOD;
    }

    @Override
    public Field<BigDecimal> field4() {
        return Payments.PAYMENTS.AMOUNT;
    }

    @Override
    public Field<String> field5() {
        return Payments.PAYMENTS.TRANSACTIONID;
    }

    @Override
    public Field<Date> field6() {
        return Payments.PAYMENTS.DATE;
    }

    @Override
    public Integer component1() {
        return getPaymentid();
    }

    @Override
    public Integer component2() {
        return getOrderid();
    }

    @Override
    public Integer component3() {
        return getPaymentmethod();
    }

    @Override
    public BigDecimal component4() {
        return getAmount();
    }

    @Override
    public String component5() {
        return getTransactionid();
    }

    @Override
    public Date component6() {
        return getDate();
    }

    @Override
    public Integer value1() {
        return getPaymentid();
    }

    @Override
    public Integer value2() {
        return getOrderid();
    }

    @Override
    public Integer value3() {
        return getPaymentmethod();
    }

    @Override
    public BigDecimal value4() {
        return getAmount();
    }

    @Override
    public String value5() {
        return getTransactionid();
    }

    @Override
    public Date value6() {
        return getDate();
    }

    @Override
    public PaymentsRecord value1(Integer value) {
        setPaymentid(value);
        return this;
    }

    @Override
    public PaymentsRecord value2(Integer value) {
        setOrderid(value);
        return this;
    }

    @Override
    public PaymentsRecord value3(Integer value) {
        setPaymentmethod(value);
        return this;
    }

    @Override
    public PaymentsRecord value4(BigDecimal value) {
        setAmount(value);
        return this;
    }

    @Override
    public PaymentsRecord value5(String value) {
        setTransactionid(value);
        return this;
    }

    @Override
    public PaymentsRecord value6(Date value) {
        setDate(value);
        return this;
    }

    @Override
    public PaymentsRecord values(Integer value1, Integer value2, Integer value3, BigDecimal value4, String value5, Date value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PaymentsRecord
     */
    public PaymentsRecord() {
        super(Payments.PAYMENTS);
    }

    /**
     * Create a detached, initialised PaymentsRecord
     */
    public PaymentsRecord(Integer paymentid, Integer orderid, Integer paymentmethod, BigDecimal amount, String transactionid, Date date) {
        super(Payments.PAYMENTS);

        set(0, paymentid);
        set(1, orderid);
        set(2, paymentmethod);
        set(3, amount);
        set(4, transactionid);
        set(5, date);
    }
}
