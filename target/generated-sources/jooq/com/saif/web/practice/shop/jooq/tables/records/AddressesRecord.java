/*
 * This file is generated by jOOQ.
 */
package com.saif.web.practice.shop.jooq.tables.records;


import com.saif.web.practice.shop.jooq.tables.Addresses;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AddressesRecord extends UpdatableRecordImpl<AddressesRecord> implements Record9<String, Integer, String, String, String, String, String, String, String> {

    private static final long serialVersionUID = 1811825128;

    /**
     * Setter for <code>Addresses.customerID</code>.
     */
    public void setCustomerid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>Addresses.customerID</code>.
     */
    public String getCustomerid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>Addresses.addressID</code>.
     */
    public void setAddressid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>Addresses.addressID</code>.
     */
    public Integer getAddressid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>Addresses.addressType</code>.
     */
    public void setAddresstype(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>Addresses.addressType</code>.
     */
    public String getAddresstype() {
        return (String) get(2);
    }

    /**
     * Setter for <code>Addresses.flat</code>.
     */
    public void setFlat(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>Addresses.flat</code>.
     */
    public String getFlat() {
        return (String) get(3);
    }

    /**
     * Setter for <code>Addresses.house</code>.
     */
    public void setHouse(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>Addresses.house</code>.
     */
    public String getHouse() {
        return (String) get(4);
    }

    /**
     * Setter for <code>Addresses.road</code>.
     */
    public void setRoad(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>Addresses.road</code>.
     */
    public String getRoad() {
        return (String) get(5);
    }

    /**
     * Setter for <code>Addresses.area</code>.
     */
    public void setArea(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>Addresses.area</code>.
     */
    public String getArea() {
        return (String) get(6);
    }

    /**
     * Setter for <code>Addresses.thana</code>.
     */
    public void setThana(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>Addresses.thana</code>.
     */
    public String getThana() {
        return (String) get(7);
    }

    /**
     * Setter for <code>Addresses.district</code>.
     */
    public void setDistrict(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>Addresses.district</code>.
     */
    public String getDistrict() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<String, Integer, String, String, String, String, String, String, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<String, Integer, String, String, String, String, String, String, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Addresses.ADDRESSES.CUSTOMERID;
    }

    @Override
    public Field<Integer> field2() {
        return Addresses.ADDRESSES.ADDRESSID;
    }

    @Override
    public Field<String> field3() {
        return Addresses.ADDRESSES.ADDRESSTYPE;
    }

    @Override
    public Field<String> field4() {
        return Addresses.ADDRESSES.FLAT;
    }

    @Override
    public Field<String> field5() {
        return Addresses.ADDRESSES.HOUSE;
    }

    @Override
    public Field<String> field6() {
        return Addresses.ADDRESSES.ROAD;
    }

    @Override
    public Field<String> field7() {
        return Addresses.ADDRESSES.AREA;
    }

    @Override
    public Field<String> field8() {
        return Addresses.ADDRESSES.THANA;
    }

    @Override
    public Field<String> field9() {
        return Addresses.ADDRESSES.DISTRICT;
    }

    @Override
    public String component1() {
        return getCustomerid();
    }

    @Override
    public Integer component2() {
        return getAddressid();
    }

    @Override
    public String component3() {
        return getAddresstype();
    }

    @Override
    public String component4() {
        return getFlat();
    }

    @Override
    public String component5() {
        return getHouse();
    }

    @Override
    public String component6() {
        return getRoad();
    }

    @Override
    public String component7() {
        return getArea();
    }

    @Override
    public String component8() {
        return getThana();
    }

    @Override
    public String component9() {
        return getDistrict();
    }

    @Override
    public String value1() {
        return getCustomerid();
    }

    @Override
    public Integer value2() {
        return getAddressid();
    }

    @Override
    public String value3() {
        return getAddresstype();
    }

    @Override
    public String value4() {
        return getFlat();
    }

    @Override
    public String value5() {
        return getHouse();
    }

    @Override
    public String value6() {
        return getRoad();
    }

    @Override
    public String value7() {
        return getArea();
    }

    @Override
    public String value8() {
        return getThana();
    }

    @Override
    public String value9() {
        return getDistrict();
    }

    @Override
    public AddressesRecord value1(String value) {
        setCustomerid(value);
        return this;
    }

    @Override
    public AddressesRecord value2(Integer value) {
        setAddressid(value);
        return this;
    }

    @Override
    public AddressesRecord value3(String value) {
        setAddresstype(value);
        return this;
    }

    @Override
    public AddressesRecord value4(String value) {
        setFlat(value);
        return this;
    }

    @Override
    public AddressesRecord value5(String value) {
        setHouse(value);
        return this;
    }

    @Override
    public AddressesRecord value6(String value) {
        setRoad(value);
        return this;
    }

    @Override
    public AddressesRecord value7(String value) {
        setArea(value);
        return this;
    }

    @Override
    public AddressesRecord value8(String value) {
        setThana(value);
        return this;
    }

    @Override
    public AddressesRecord value9(String value) {
        setDistrict(value);
        return this;
    }

    @Override
    public AddressesRecord values(String value1, Integer value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AddressesRecord
     */
    public AddressesRecord() {
        super(Addresses.ADDRESSES);
    }

    /**
     * Create a detached, initialised AddressesRecord
     */
    public AddressesRecord(String customerid, Integer addressid, String addresstype, String flat, String house, String road, String area, String thana, String district) {
        super(Addresses.ADDRESSES);

        set(0, customerid);
        set(1, addressid);
        set(2, addresstype);
        set(3, flat);
        set(4, house);
        set(5, road);
        set(6, area);
        set(7, thana);
        set(8, district);
    }
}
